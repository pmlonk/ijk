#Practical 5
from keras.models import Sequential 
from keras.layers import Dense 
from sklearn.datasets import make_blobs 
from sklearn.preprocessing import MinMaxScaler
X,Y=make_blobs(n_samples=100,centers=2,n_features=2,random_state=1) 
print("valuessX:",X)
print("valuessY:",Y)
scalar=MinMaxScaler() 
scalar.fit(X) 
X=scalar.transform(X) 
print("VAlue:",X)
model=Sequential()
model.add(Dense(4,input_dim=2,activation='relu')) 
model.add(Dense(4,activation='relu')) 
model.add(Dense(1,activation='sigmoid')) 
model.compile(loss='binary_crossentropy',optimizer='adam') 
model.fit(X,Y,epochs=500)
Xnew,Yreal=make_blobs(n_samples=3,centers=2,n_features=2,random_state=1) 
print("valuessX:",Xnew)
print("valuessY:",Yreal)
Xnew=scalar.transform(Xnew) 
Ynew=model.predict(Xnew)
print("valuessX:",Xnew)
print("valuessY:",Ynew)
for i in range(len(Xnew)): 
    print("X=%s,Predicted=%s,Desired=%s"%(Xnew[i],Ynew[i],Yreal[i]))