#Practical 4
from tensorflow.keras.utils import to_categorical 
from keras.models import Sequential 
from keras.layers import Dense,Conv2D,Flatten
import matplotlib.pyplot as plt
import tensorflow as tf
(X_train,Y_train),(X_test,Y_test)=tf.keras.datasets.mnist.load_data("")
plt.imshow(X_test[1])
plt.show()
print(X_train[0].shape)
X_train=X_train.reshape(60000,28,28,1)
X_test=X_test.reshape(10000,28,28,1)
Y_train=to_categorical(Y_train)
Y_test=to_categorical(Y_test)
Y_train[0]
model=Sequential()
model.add(Conv2D(64,kernel_size=3,activation='relu',input_shape=(28,28,1)))
model.add(Conv2D(32,kernel_size=3,activation='relu'))
model.add(Flatten())
model.add(Dense(10,activation='softmax'))
model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])
model.fit(X_train,Y_train,epochs=1)
model.summary()
Image = model.predict(X_test[:1])
from numpy import argmax
argmax(Image)