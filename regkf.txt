#Practical 6a

from keras.models import Sequential
from keras.layers import Dense
from sklearn.model_selection import KFold
import numpy
dataset = numpy.loadtxt("", delimiter=",")
X = dataset[:,0:8]
Y = dataset[:,8]
kfold = KFold(n_splits=10, shuffle=True, random_state=1)
cvscores = []
for train, test in kfold.split(X, Y):
    model = Sequential()
    model.add(Dense(12, input_dim=8, activation='relu'))
    model.add(Dense(8, activation='relu'))
    model.add(Dense(1, activation='sigmoid'))
model.compile(loss='mean_squared_error', optimizer='adam', metrics=['accuracy'])
model.fit(X[train], Y[train], epochs=150, batch_size=10, verbose=0)
scores = model.evaluate(X[test], Y[test], verbose=1)
print(scores)
print("Accuracy: %.2f%%" %(scores[1]*100))
print("Accuracy: %.2f%%" %(scores[0]*100))
cvscores.append(scores[1] * 100)
print("%.2f%% (+/- %.2f%%)" % (numpy.mean(cvscores), numpy.std(cvscores)))